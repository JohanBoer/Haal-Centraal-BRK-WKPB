/* 
 * Kadaster - Publiekrechtelijke beperkingen
 *
 * De definitie van de Publiekrechtelijke beperkingen endpoints en components. 
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Beperkingsgebied
    /// </summary>
    [DataContract]
    public partial class Beperkingsgebied :  IEquatable<Beperkingsgebied>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Beperkingsgebied" /> class.
        /// </summary>
        /// <param name="bagObjectIdentificatie">bagObjectIdentificatie.</param>
        /// <param name="bgtObjectIdentificatie">bgtObjectIdentificatie.</param>
        /// <param name="kadastraalOnroerendeZaakIdentificaties">kadastraalOnroerendeZaakIdentificaties.</param>
        /// <param name="vrijeContour">vrijeContour.</param>
        public Beperkingsgebied(List<string> bagObjectIdentificatie = default(List<string>), List<string> bgtObjectIdentificatie = default(List<string>), List<string> kadastraalOnroerendeZaakIdentificaties = default(List<string>), VrijeContour vrijeContour = default(VrijeContour))
        {
            this.BagObjectIdentificatie = bagObjectIdentificatie;
            this.BgtObjectIdentificatie = bgtObjectIdentificatie;
            this.KadastraalOnroerendeZaakIdentificaties = kadastraalOnroerendeZaakIdentificaties;
            this.VrijeContour = vrijeContour;
        }
        
        /// <summary>
        /// Gets or Sets BagObjectIdentificatie
        /// </summary>
        [DataMember(Name="bagObjectIdentificatie", EmitDefaultValue=false)]
        public List<string> BagObjectIdentificatie { get; set; }

        /// <summary>
        /// Gets or Sets BgtObjectIdentificatie
        /// </summary>
        [DataMember(Name="bgtObjectIdentificatie", EmitDefaultValue=false)]
        public List<string> BgtObjectIdentificatie { get; set; }

        /// <summary>
        /// Gets or Sets KadastraalOnroerendeZaakIdentificaties
        /// </summary>
        [DataMember(Name="kadastraalOnroerendeZaakIdentificaties", EmitDefaultValue=false)]
        public List<string> KadastraalOnroerendeZaakIdentificaties { get; set; }

        /// <summary>
        /// Gets or Sets VrijeContour
        /// </summary>
        [DataMember(Name="vrijeContour", EmitDefaultValue=false)]
        public VrijeContour VrijeContour { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Beperkingsgebied {\n");
            sb.Append("  BagObjectIdentificatie: ").Append(BagObjectIdentificatie).Append("\n");
            sb.Append("  BgtObjectIdentificatie: ").Append(BgtObjectIdentificatie).Append("\n");
            sb.Append("  KadastraalOnroerendeZaakIdentificaties: ").Append(KadastraalOnroerendeZaakIdentificaties).Append("\n");
            sb.Append("  VrijeContour: ").Append(VrijeContour).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Beperkingsgebied);
        }

        /// <summary>
        /// Returns true if Beperkingsgebied instances are equal
        /// </summary>
        /// <param name="input">Instance of Beperkingsgebied to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Beperkingsgebied input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.BagObjectIdentificatie == input.BagObjectIdentificatie ||
                    this.BagObjectIdentificatie != null &&
                    input.BagObjectIdentificatie != null &&
                    this.BagObjectIdentificatie.SequenceEqual(input.BagObjectIdentificatie)
                ) && 
                (
                    this.BgtObjectIdentificatie == input.BgtObjectIdentificatie ||
                    this.BgtObjectIdentificatie != null &&
                    input.BgtObjectIdentificatie != null &&
                    this.BgtObjectIdentificatie.SequenceEqual(input.BgtObjectIdentificatie)
                ) && 
                (
                    this.KadastraalOnroerendeZaakIdentificaties == input.KadastraalOnroerendeZaakIdentificaties ||
                    this.KadastraalOnroerendeZaakIdentificaties != null &&
                    input.KadastraalOnroerendeZaakIdentificaties != null &&
                    this.KadastraalOnroerendeZaakIdentificaties.SequenceEqual(input.KadastraalOnroerendeZaakIdentificaties)
                ) && 
                (
                    this.VrijeContour == input.VrijeContour ||
                    (this.VrijeContour != null &&
                    this.VrijeContour.Equals(input.VrijeContour))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BagObjectIdentificatie != null)
                    hashCode = hashCode * 59 + this.BagObjectIdentificatie.GetHashCode();
                if (this.BgtObjectIdentificatie != null)
                    hashCode = hashCode * 59 + this.BgtObjectIdentificatie.GetHashCode();
                if (this.KadastraalOnroerendeZaakIdentificaties != null)
                    hashCode = hashCode * 59 + this.KadastraalOnroerendeZaakIdentificaties.GetHashCode();
                if (this.VrijeContour != null)
                    hashCode = hashCode * 59 + this.VrijeContour.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
